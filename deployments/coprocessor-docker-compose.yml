services:
  ####################### DATABASE SETUP #######################
  db:
    container_name: db
    image: postgres:15.7
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - db:/var/lib/postgresql/data

  migration:
    container_name: db-migration
    build:
      context: ../.
      dockerfile: fhevm-engine/fhevm-db/Dockerfile
      tags:
      - "fhevm-db-migration:v0.7.0-local"
    image: ghcr.io/zama-ai/fhevm-db-migration:e0352c8
    environment:
      DATABASE_URL: ${DATABASE_URL}
      TENANT_API_KEY: ${TENANT_API_KEY}
      ACL_CONTRACT_ADDRESS: ${ACL_CONTRACT_ADDRESS}
      INPUT_VERIFIER_ADDRESS: ${INPUT_VERIFIER_ADDRESS}
    volumes:
      - ../fhevm-engine/fhevm-keys:/fhevm-keys
    depends_on:
      db:
        condition: service_healthy

  ####################### COPROCESSOR SERVICES #######################
  coprocessor-server:
    container_name: coprocessor-server
    build:
      context: ../.
      dockerfile: fhevm-engine/coprocessor/Dockerfile
      tags:
        - "ghcr.io/zama-ai/fhevm-coprocessor:v0.7.0-local"
    image: ghcr.io/zama-ai/fhevm-coprocessor:6ce1fd7
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - '50051:50051'
    volumes:
      - ./config/coprocessor/coprocessor.key:/usr/share/coprocessor.key
    command:
      - coprocessor
      - --run-server
      - --server-addr=0.0.0.0:50051
      - --coprocessor-private-key=/usr/share/coprocessor.key
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully

  fhevm-listener:
    container_name: "fhevm-listener"
    build:
      context: ../.
      dockerfile: fhevm-engine/coprocessor/Dockerfile
      tags:
        - "ghcr.io/zama-ai/fhevm-coprocessor:v0.7.0-local"
    image: ghcr.io/zama-ai/fhevm-coprocessor:6ce1fd7
    environment:
      DATABASE_URL: ${DATABASE_URL}
      TENANT_API_KEY: ${TENANT_API_KEY}
      RPC_URL: ${RPC_URL}
    command:
      - fhevm_listener
      - --database-url=${DATABASE_URL}
      - --coprocessor-api-key=${TENANT_API_KEY}
      - --url=${RPC_URL}
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully

  gw-listener:
    container_name: "gw-listener"
    build:
      context: ../.
      dockerfile: fhevm-engine/coprocessor/Dockerfile
      tags:
        - "ghcr.io/zama-ai/fhevm-coprocessor:v0.7.0-local"
    image: ghcr.io/zama-ai/fhevm-coprocessor:6ce1fd7
    environment:
      DATABASE_URL: ${DATABASE_URL}
      GATEWAY_URL: ${GATEWAY_WS_URL}
      ZKPOK_MANAGER_ADDRESS: ${ZKPOK_MANAGER_ADDRESS}
    command:
      - gw_listener
      - --database-url=${DATABASE_URL}
      - --gw-url=${GATEWAY_WS_URL}
      - --zkpok-manager-address=${ZKPOK_MANAGER_ADDRESS}
      - --verify-proof-req-database-channel="event_zkpok_new_work"
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully

  zkproof-worker:
    container_name: "zkproof-worker"
    build:
      context: ../.
      dockerfile: fhevm-engine/coprocessor/Dockerfile
      tags:
        - "ghcr.io/zama-ai/fhevm-coprocessor:v0.7.0-local"
    image: ghcr.io/zama-ai/fhevm-coprocessor:6ce1fd7
    environment:
      DATABASE_URL: ${DATABASE_URL}
    command:
      - zkproof_worker
      - --pg-listen-channel="event_zkpok_new_work"
      - --pg-notify-channel="event_zkpok_computed"
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully

  sns-worker:
    container_name: "sns-worker"
    build:
      context: ../.
      dockerfile: fhevm-engine/coprocessor/Dockerfile
      tags:
        - "ghcr.io/zama-ai/fhevm-coprocessor:v0.7.0-local"
    image: ghcr.io/zama-ai/fhevm-coprocessor:77ac0bd
    environment:
      DATABASE_URL: ${DATABASE_URL}
      TENANT_API_KEY: ${TENANT_API_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_ENDPOINT_URL: ${AWS_ENDPOINT_URL}
      AWS_REGION: ${AWS_REGION}
    command:
      - sns_worker
      - --database-url=${DATABASE_URL}
      - --tenant-api-key=${TENANT_API_KEY}
      - --pg-listen-channels=["event_pbs_computations" "event_ciphertext_computed"]
      - --pg-notify-channel="notify_ct128_computed"
      - --work-items-batch-size=4
      - --pg-polling-interval=60
      - --pg-pool-connections=10
      
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully

  transaction-sender:
    container_name: "transaction-sender"
    build:
      context: ../.
      dockerfile: fhevm-engine/coprocessor/Dockerfile
      tags:
        - "ghcr.io/zama-ai/fhevm-coprocessor:v0.7.0-local"
    image: ghcr.io/zama-ai/fhevm-coprocessor:6ce1fd7
    environment:
      DATABASE_URL: ${DATABASE_URL}
      GATEWAY_URL: ${GATEWAY_URL}
      TX_SENDER_PRIVATE_KEY: ${TX_SENDER_PRIVATE_KEY}
      ZKPOK_MANAGER_ADDRESS: ${ZKPOK_MANAGER_ADDRESS}
      CIPHERTEXT_STORAGE_ADDRESS: ${CIPHERTEXT_STORAGE_ADDRESS}
    command:
      - transaction_sender
      - --database-url=${DATABASE_URL}
      - --gateway-url=${GATEWAY_URL}
      - --private-key=${TX_SENDER_PRIVATE_KEY}
      - --zkpok-manager-address=${ZKPOK_MANAGER_ADDRESS}
      - --ciphertext-storage-address=${CIPHERTEXT_STORAGE_ADDRESS}
      - --verify-proof-resp-database-channel="event_zkpok_computed"
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully


volumes:
  db:
