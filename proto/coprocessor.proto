syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.fhevmcoprocessor";
option java_outer_classname = "FhevmCoprocessor";

package coprocessor;

service FhevmCoprocessor {
  rpc AsyncCompute (AsyncComputeRequest) returns (GenericResponse) {}
  rpc UploadCiphertexts (CiphertextUploadBatch) returns (GenericResponse) {}
  rpc WaitComputations (AsyncComputeRequest) returns (FhevmResponses) {}
  rpc UploadInputs (InputUploadBatch) returns (InputUploadResponse) {}
  // for debugging, should be removed in prod
  rpc DebugDecryptCiphertext (DebugDecryptRequest) returns (DebugDecryptResponse) {}
  // for debugging, should be removed in prod
  rpc DebugEncryptCiphertext (DebugEncryptRequest) returns (GenericResponse) {}
}

message DebugEncryptRequest {
  repeated DebugEncryptRequestSingle values = 1;
}

message DebugEncryptRequestSingle {
  bytes handle = 1;
  bytes le_value = 2;
  int32 output_type = 3;
}

message DebugDecryptRequest {
  repeated bytes handles = 1;
}

message DebugDecryptResponse {
  repeated DebugDecryptResponseSingle values = 1;
}

message DebugDecryptResponseSingle {
  int32 output_type = 1;
  string value = 2;
}

enum FheOperation {
  FHE_ADD = 0;
  FHE_SUB = 1;
  FHE_MUL = 2;
  FHE_DIV = 3;
  FHE_REM = 4;
  FHE_BIT_AND = 5;
  FHE_BIT_OR = 6;
  FHE_BIT_XOR = 7;
  FHE_SHL = 8;
  FHE_SHR = 9;
  FHE_ROTL = 10;
  FHE_ROTR = 11;
  FHE_EQ = 12;
  FHE_NE = 13;
  FHE_GE = 14;
  FHE_GT = 15;
  FHE_LE = 16;
  FHE_LT = 17;
  FHE_MIN = 18;
  FHE_MAX = 19;
  FHE_NEG = 20;
  FHE_NOT = 21;
  FHE_CAST = 30;
  FHE_IF_THEN_ELSE = 31;
}

message AsyncComputation {
  FheOperation operation = 1;
  bytes output_handle = 3;
  repeated AsyncComputationInput inputs = 4;
}

message AsyncComputationInput {
  oneof input {
    bytes input_handle = 1;
    bytes scalar = 2;
  }
}

message CiphertextToUpload {
  int32 ciphertext_type = 1;
  bytes ciphertext_handle = 2;
  bytes ciphertext_bytes = 3;
}

message InputToUpload {
  bytes input_payload = 1;
  bytes signature = 2;
}

message InputCiphertextResponseHandle {
  bytes handle = 1;
  int32 ciphertext_type = 2;
}

message InputCiphertextResponse {
  repeated InputCiphertextResponseHandle input_handles = 1;
}

message InputUploadResponse {
  repeated InputCiphertextResponse upload_responses = 1;
}

// The request message containing the user's name.
message AsyncComputeRequest {
  repeated AsyncComputation computations = 1;
}

message CiphertextUploadBatch {
  repeated CiphertextToUpload input_ciphertexts = 1;
}

message InputUploadBatch {
  repeated InputToUpload input_ciphertexts = 1;
}

message WaitBatch {
  repeated string ciphertext_handles = 1;
}

message GenericResponse {
  int32 responseCode = 1;
}

message FhevmResponses {
  repeated string ciphertext_handles = 1;
}
