name: Build and Push Docker Image

on:
  push:
    branches:
      - docker_release
  workflow_dispatch:
    inputs:
      image_name:
        description: 'The full name of the Docker image (e.g., ghcr.io/zama-ai/fhevm-coprocessor)'
        required: true
        default: "ghcr.io/zama-ai/fhevm-coprocessor"
        type: string
      dockerfile_path:
        description: 'Path to the Dockerfile (default: ./fhevm-engine/coprocessor/Dockerfile)'
        required: true
        default: './fhevm-engine/coprocessor/Dockerfile'
        type: string

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # DEBUG
      - name: List env vars
        run: |
          printenv | grep GITHUB

      # - name: Get Docker tag
      #   id: get_tag
      #   run: |
      #     if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
      #       DOCKER_TAG="${GITHUB_REF#refs/tags/}"
      #     else
      #       DOCKER_TAG="${GITHUB_SHA}"
      #     fi
      #     echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV

      # - name: Build and Push Docker Image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ${{ github.event.inputs.dockerfile_path }}
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      #     tags: |
      #       ${{ github.event.inputs.image_name }}:${{ env.DOCKER_TAG }}  # Tag with Git tag or commit SHA
      #       ${{ github.event.inputs.image_name }}:latest  # Tag as 'latest'
