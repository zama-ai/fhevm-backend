name: Rust tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cargo-tests:
    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.82.0]

    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        lfs: true

    - name: Checkout LFS objects
      run: git lfs checkout

    - name: Set up Rust
      uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true

    - name: Install protobuf-compiler
      run: |
        sudo apt-get install -y protobuf-compiler && \
        cargo install sqlx-cli

    - name: Cache cargo registry
      uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c # v3.3.3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo index
      uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c # v3.3.3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache cargo build
      uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c # v3.3.3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-

    - name: Init database
      run: make init_db
      working-directory: fhevm-engine/coprocessor

    - name: Run tests
      run: |
        DATABASE_URL=postgresql://postgres:postgres@localhost:5432/coprocessor cargo test --release -- --test-threads=1
      working-directory: fhevm-engine
